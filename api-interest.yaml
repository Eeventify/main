openapi: 3.0.1
info:
  title: Interest API
  description: An API used for managing interests for the Eeventify application
  version: v1
servers:
  - url: http://office.pepr.com:25252
    description: Production server
paths:
  /Interests:
    get:
      tags:
        - Interests
      summary: Get a list of Interests
      description: ''
      parameters:
        - name: search
          in: query
          description: Return only Interests starting with search term (optional)
          schema:
            type: string
        - name: sort
          in: query
          description: Sort results alphabetically on name (default = false)
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
    post:
      tags:
        - Interests
      summary: Creates an Interest
      description: "Sample request:\r\n            \r\n    POST /Interest\r\n    {\r\n       \"name\": \"Tennis\",\r\n       \"description\": \"Tennis is a racket sport that can be played individually against a single opponent or between two teams of two players each.\"\r\n    }"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest'
          text/json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Interest'
      responses:
        '201':
          description: Returns the newly created item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
        '400':
          description: If the item is null
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/Interests/{id}':
    get:
      tags:
        - Interests
      summary: Get a specific Interest
      description: ''
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Interests
      summary: Updates an Interest
      description: "Sample request:\r\n            \r\n    PUT /Interest\r\n    {\r\n       \"id\": 1,\r\n       \"name\": \"Tennis\",\r\n       \"description\": \"Tennis is a racket sport that can be played individually against a single opponent or between two teams of two players each.\"\r\n    }"
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest'
          text/json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Interest'
      responses:
        '204':
          description: No Content
        '400':
          description: If the item is null
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Interests
      summary: Deletes an Interest
      description: ''
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    Interest:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }