openapi: 3.0.1
info:
  title: Event API
  description: An API used for event management
  version: v1
paths:
  /Event:
    get:
      tags:
        - Event
      parameters:
        - name: Id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Event'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Event
      parameters:
        - name: description
          in: query
          schema:
            type: string
        - name: title
          in: query
          schema:
            type: string
        - name: locationbased
          in: query
          schema:
            type: boolean
        - name: latitude
          in: query
          schema:
            type: number
            format: double
        - name: longitude
          in: query
          schema:
            type: number
            format: double
        - name: hostid
          in: query
          schema:
            type: integer
            format: int32
        - name: maxpeople
          in: query
          schema:
            type: integer
            format: int32
        - name: minpeople
          in: query
          schema:
            type: integer
            format: int32
        - name: startevent
          in: query
          schema:
            type: string
            format: date-time
        - name: hasstarted
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Event'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        interests:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        members:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        title:
          type: string
          nullable: true
        locationBased:
          type: boolean
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        hostID:
          type: integer
          format: int32
        maxPeople:
          type: integer
          format: int32
        minPeople:
          type: integer
          format: int32
        startEvent:
          type: string
          format: date-time
        hasStarted:
          type: boolean
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }